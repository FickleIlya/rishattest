server {
    # Listen on plain old HTTP and catch all requests so they can be redirected
    # to HTTPS instead.
    listen 80;
    listen [::]:80;
    server_name fickle-rishattest.tk www.fickle-rishattest.tk;
    # Pass this particular URL off to the certbot server so it can properly
    # respond to the Let's Encrypt ACME challenges for the HTTPS certificates.
    location '/.well-known/acme-challenge' {
        allow all;
        root /var/www/html;
    }

    # Everything else gets shunted over to HTTPS for each user defined
    # server to handle.
    location / {
        return 301 https://$host$request_uri;
    }
    return 301 https://fickle-rishattest.tk$request_uri;
}

server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;

    server_name fickle-rishattest.tk;

    # SSL code
    ssl_certificate /etc/letsencrypt/live/fickle-rishattest.tk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/fickle-rishattest.tk/privkey.pem;

    location / {
	 proxy_pass http://app:8000;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header Host $host;
         proxy_redirect off;

    }
    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;
}

server {
    listen [::]:443 ssl http2;
    listen 443 ssl http2;

    server_name www.fickle-rishattest.tk;

    # SSL code
    ssl_certificate /etc/letsencrypt/live/fickle-rishattest.tk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/fickle-rishattest.tk/privkey.pem;

    return 301 https://fickle-rishattest.tk$request_uri;
}
